ribo<-ribo[ribo$ORF_type!='annotated',]
ribo<-ribo[ribo$ORF_length/3 <= length,]
View(ribo)
label<-c('sPep')
table(ribo$ORF_type)
#构建肽索引了，重点是fasta的head
orftype<-ifelse(ribo$ORF_type=='dORF','dORF',ifelse(
ribo$ORF_type=='internal','internal ORF',ifelse(
ribo$ORF_type=='novel','novel ORF',ifelse(
ribo$ORF_type=='Overlap_dORF','Overlap_dORF',ifelse(
ribo$ORF_type=='Overlap_uORF','Overlap_uORF', 'uORF')))))
ribo$name<-paste0(label,'|',label,'_',1:nrow(ribo),'|',label,'_',1:nrow(ribo),
' ',ribo$gene_name,' ',orftype)
View(ribo)
add_numbers <- function(vec) {
result <- character(length(vec))
counts <- list()
for (i in seq_along(vec)) {
element <- vec[i]
if (element %in% names(counts)) {
counts[[element]] <- counts[[element]] + 1
} else {
counts[[element]] <- 1
}
result[i] <- paste(element, counts[[element]], sep = " ")
}
return(result)
}
add_numbers(ribo$name[1:10])
ribo$name1<-paste0(label,'|',label,'_',1:nrow(ribo),'|',label,'_',1:nrow(ribo),
' ')
ribo$name2<-paste0(ribo$gene_name,' ',orftype)
add_numbers(ribo$name2[1:10])
ribo$name2<-add_numbers(ribo$name2)
ribo$name1<-paste0(label,'|',label,'_',1:nrow(ribo),'|',label,'_',1:nrow(ribo))
ribo$name2<-paste0(ribo$gene_name,' ',orftype)
ribo$name2<-add_numbers(ribo$name2)
if (missing(OrganismName)) {
ribo$name3<-paste0('OS=','Homo sapiens',' OX=','9606',' GN=',ribo$gene_name,' PE=6')
} else{
ribo$name3<-paste0('OS=',OrganismName,' OX=',OrganismIdentifier,' GN=',ribo$gene_name,' PE=6')
}
OrganismName
ribo$name3<-paste0('OS=','Homo sapiens',' OX=','9606',' GN=',ribo$gene_name,' PE=6')
index<-data.frame(name=c(paste0(ribo$name1," ",ribo$name2," ",ribo$name3)),
sequence=c(ribo$AAseq))
View(index)
roxygenize()
roxygenize()
#' @param source ribocode, ribotish or other
#' @param length Peptide length, used to filter long proteins in the index, set to 0 when there is no need to filter by length
#' @param OrganismName OrganismName is the scientific name of the organism for the UniProtKB entry, defaulting to "Homo sapiens".
#' @param OrganismIdentifier OrganismIdentifier is the unique identifier of the source organism, assigned by NCBI, defaulting to "9696".
#'
#' @return A Biostrings object can be written as a fasta file
#' @export
#'
#' @examples
#'
generate_index<- function(file,source,length,label,
OrganismName,OrganismIdentifier) {
add_numbers <- function(vec) {
result <- character(length(vec))
counts <- list()
for (i in seq_along(vec)) {
element <- vec[i]
if (element %in% names(counts)) {
counts[[element]] <- counts[[element]] + 1
} else {
counts[[element]] <- 1
}
result[i] <- paste(element, counts[[element]], sep = " ")
}
return(result)
}
if(source=='ribocode'){
ribo<-read.table(file,sep = '\t',header = T)
ribo<-ribo[!duplicated(ribo$ORF_ID),]
ribo<-ribo[ribo$ORF_type!='annotated',]
if(length==0) {
ribo<-ribo
} else{
ribo<-ribo[ribo$ORF_length/3 <= length,]
}
#构建肽索引了，重点是fasta的head
orftype<-ifelse(ribo$ORF_type=='dORF','dORF',ifelse(
ribo$ORF_type=='internal','internal ORF',ifelse(
ribo$ORF_type=='novel','novel ORF',ifelse(
ribo$ORF_type=='Overlap_dORF','Overlap_dORF',ifelse(
ribo$ORF_type=='Overlap_uORF','Overlap_uORF', 'uORF')))))
ribo$name1<-paste0(label,'|',label,'_',1:nrow(ribo),'|',label,'_',1:nrow(ribo))
ribo$name2<-paste0(ribo$gene_name,' ',orftype)
ribo$name2<-add_numbers(ribo$name2)
if (missing(OrganismName)) {
ribo$name3<-paste0('OS=','Homo sapiens',' OX=','9606',' GN=',ribo$gene_name,' PE=6')
} else{
ribo$name3<-paste0('OS=',OrganismName,' OX=',OrganismIdentifier,' GN=',ribo$gene_name,' PE=6')
}
index<-data.frame(name=c(paste0(ribo$name1," ",ribo$name2," ",ribo$name3)),
sequence=c(ribo$AAseq))
}
if(source=='ribotish'){
}
if(source=='other'){
}
}
file
source
roxygenize()
generate_index
?generate_index
??generate_index
rm(list= ls())
file<-'../test_package/ribo/ribotish_full.txt'
source <-'ribotish'
length<-100
label<-'sPep'
ribo<-read.table(file,sep = '\t',header = T)
View(ribo)
ribo<-data.table::fread(file,sep = '\t',header = T)
View(ribo)
table(ribo$TisType)
# ribo<-ribo[!duplicated(ribo$ORF_ID),]
ribo<-ribo[ribo$TisType!='Annotated',]
View(ribo)
table(ribo$TisType)
ribo<-data.table::fread(file,sep = '\t',header = T)
ribo<-ribo[ribo$AALen <= length,]
View(ribo)
table(ribo$TISGroup)
table(ribo$TisType)
ribo<-ribo[ribo$ORF_type!='annotated',]
ribo<-read.table(file,sep = '\t',header = T)
ribo<-ribo[ribo$ORF_type!='annotated',]
ribo<-data.table::fread(file,sep = '\t',header = T)
ribo<-ribo[ribo$TisType!='Annotated',]
ribo<-ribo[ribo$AALen <= length,]
orftype<-ifelse(ribo$TisType %in% c("3'UTR"),'dORF',ifelse(
ribo$TisType %in% c("5'UTR"),'uORF',ifelse(
ribo$TisType %in% c("3'UTR:CDSFrameOverlap"),'Overlap_dORF',ifelse(
ribo$TisType %in% c("5'UTR:CDSFrameOverlap"),'Overlap_uORF',ifelse(
ribo$TisType %in% c("Novel"),'novel ORF', 'other ORF')))))
table(orftype)
ribo$name1<-paste0(label,'|',label,'_',1:nrow(ribo),'|',label,'_',1:nrow(ribo))
View(ribo)
ribo$name2<-paste0(ribo$Symbol,' ',orftype)
add_numbers <- function(vec) {
result <- character(length(vec))
counts <- list()
for (i in seq_along(vec)) {
element <- vec[i]
if (element %in% names(counts)) {
counts[[element]] <- counts[[element]] + 1
} else {
counts[[element]] <- 1
}
result[i] <- paste(element, counts[[element]], sep = " ")
}
return(result)
}
ribo$name2<-add_numbers(ribo$name2)
ribo$name3<-paste0('OS=','Homo sapiens',' OX=','9606',' GN=',ribo$Symbol,' PE=6')
index<-data.frame(name=c(paste0(ribo$name1," ",ribo$name2," ",ribo$name3)),
sequence=c(ribo$AAseq))
index<-data.frame(name=c(paste0(ribo$name1," ",ribo$name2," ",ribo$name3)),
sequence=c(ribo$Seq))
View(index)
source<-'other'
file<-'../test_package/ribo/Duffy_etal_database_reference_table.csv'
ribo<-read.csv(file)
ribo<-ribo[,c('genename','orftype','pepseq')]
View(ribo)
ribo$length<-nchar(ribo$pepseq)
ribo<-ribo[ribo$length <= length,]
View(ribo)
ribo$name1<-paste0(label,'|',label,'_',1:nrow(ribo),'|',label,'_',1:nrow(ribo))
ribo$name2<-paste0(ribo$genename,' ',ribo$orftype)
View(ribo)
ribo$name2<-add_numbers(ribo$name2)
View(ribo)
ribo$name3<-paste0('OS=','Homo sapiens',' OX=','9606',' GN=',ribo$genename,' PE=6')
View(ribo)
index<-data.frame(name=c(paste0(ribo$name1," ",ribo$name2," ",ribo$name3)),
sequence=c(ribo$Seq))
index<-data.frame(name=c(paste0(ribo$name1," ",ribo$name2," ",ribo$name3)),
sequence=c(ribo$pepseq))
View(index)
?roxygenize()
?roxygenize
??roxygenize()
roxygen2::roxygenize()
library(TNSMD)
?roxygen2::roxygenize()
?generate_index
target<-'../FDR/10NIH_M_451_032523/10NIH_M_451_032523_percolator_target_psms.tsv'
decoy<-'../FDR/10NIH_M_451_032523/10NIH_M_451_032523_percolator_decoy_psms.tsv'
target<-read.table(target,header = T)
decoy<-read.table(decoy,header = T)
library(ggplot2)
plot<-data.frame(
score=c(target$score,decoy$score),
group=c(rep('target',nrow(target)),rep('decoy',nrow(decoy)))
)
library(ggplot2)
p<-list()
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "Global") +
scale_fill_manual(values = c("decoy" = "#FF9900","target" = "#009900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
p[[1]]<-
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "Global") +
scale_fill_manual(values = c("decoy" = "#FF9900","target" = "#009900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
View(target)
target_clas<-target[grep('sp',target$proteinIds),]
decoy_clas<-decoy[grep('sp',decoy$proteinIds),]
plot<-data.frame(
score=c(target_clas$score,decoy_clas$score),
group=c(rep('target',nrow(target_clas)),rep('decoy',nrow(decoy_clas)))
)
View(plot)
target_clas<-target[grep('sp',target$proteinIds),]
View(target_clas)
decoy_clas<-decoy[grep('sp',decoy$proteinIds),]
View(decoy_clas)
plot<-data.frame(
score=c(target_clas$score,decoy_clas$score),
group=c(rep('target',nrow(target_clas)),rep('decoy',nrow(decoy_clas)))
)
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "Canonical protein") +
scale_fill_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
p[[2]]<-
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "Canonical protein") +
scale_fill_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
target_clas<-target[-grep('sp',target$proteinIds),]
View(target_clas)
decoy_clas<-decoy[-grep('sp',decoy$proteinIds),]
View(decoy_clas)
plot<-data.frame(
score=c(target_clas$score,decoy_clas$score),
group=c(rep('target',nrow(target_clas)),rep('decoy',nrow(decoy_clas)))
)
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "sORF encoded peptide") +
scale_fill_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
p[[3]]<-
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "sORF encoded peptide") +
scale_fill_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
target_clas<-target[-grep('sp',target$proteinIds),]
decoy_clas<-decoy[-grep('sp',decoy$proteinIds),]
View(decoy_clas)
View(decoy_clas)
target_clas$score[1:10]
plot<-data.frame(
score=c(target_clas$score,decoy_clas$score),
pep=runif(nrow(target_clas)+nrow(decoy_clas)),
group=c(rep('target',nrow(target_clas)),rep('decoy',nrow(decoy_clas))),
seq=c(target_clas$peptide,decoy_clas$peptide)
)
View(plot)
plot$score<-as.numeric(plot$score)
plot$pep<-as.numeric(plot$pep)
plot$seq <- gsub("[^A-Z]", "", plot$seq)
View(plot)
library(ggrepel)
p<-list()
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "sORF encoded peptide") +
scale_fill_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$score>0.7,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
peptidelist<-c('LIEFCISSMRN','MTMLADHAARQ','MHLASFLQKA')
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
?geom_text_repel
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = 0.7 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = 1 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = 2 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = 0 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = -1 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = -2 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = -1.5 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = -1.5 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p<-list()
p[[1]]<-
ggplot(plot, aes(score, fill = group, col = I("black"))) +
geom_histogram(alpha = 0.5, bins = 40, position = "identity") +
labs(x = 'score', y = "",
title = "sORF encoded peptide") +
scale_fill_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)
p[[2]]<-
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),
size = 3,segment.color = "black", show.legend = FALSE,hjust = -1.5 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
library(patchwork)
wrap_plots(p,nrow=2, guides="collect")
ggplot(data = plot,aes(x=score,y=pep, colour=group))+
geom_point(shape=21,size=4)+
scale_colour_manual(values = c("target" = "#009900", "decoy" = "#FF9900")) +
geom_text_repel(data = plot[plot$seq %in% peptidelist,],aes(label = seq),color = "black",
size = 3,segment.color = "black", show.legend = FALSE,hjust = -1.5 )+
theme_bw() +
theme(plot.title = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
axis.title.y = element_text(angle = 0))+
theme(aspect.ratio=1)+
labs(x = 'score', y = "")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
roxygen2::roxygenize()
library(TNSMD)
?plot_fdr
?plot_peptide_fdr
rm(list= ls())
