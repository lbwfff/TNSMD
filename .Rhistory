library(TNSMD)
?hello
combined_peptide<-('/Users/lb4489/project/new_trans_homo/MS/code/combined_peptide.tsv')
nonadd<-read.table(combined_peptide,sep = '\t',header = T)
View(nonadd)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
View(nonadd)
View(nonadd)
nonadd<-nonadd[-grep('sp|',nonadd$Protein),]
nonadd<-read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
View(nonadd)
combined_peptide<-('/Users/lb4489/project/new_trans_homo/MS/code/combined_peptide.tsv')
nonadd<-read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('[sp|]',nonadd$Protein),]
combined_peptide<-('/Users/lb4489/project/new_trans_homo/MS/code/combined_peptide.tsv')
nonadd<-read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
View(nonadd)
nonadd<-nonadd[-grep('HUMAN',nonadd$Mapped.Proteins),]
View(nonadd)
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
combined_peptide<-('/Users/lb4489/project/new_trans_homo/MS/code/combined_peptide.tsv')
nonadd<-read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('HUMAN',nonadd$Mapped.Proteins),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
View(nonadd)
library('Biostrings')
peplist<-nonadd$Peptide.Sequence
peplist<-unique(peplist)
peplist<-data.frame(seq=c(peplist),
match=c(NA))
View(peplist)
fastafile<-('/Users/lb4489/project/biodata/uniprot_human.fasta')
# fastafile<-('/Users/lb4489/project/biodata/uniprot_human.fasta')
pattern2 <- readAAStringSet(fastafile)
for (i in 1:nrow(peplist)){
pattern1 <- AAString(peplist$seq[i])
match<-vcountPattern(pattern1, pattern2, max.mismatch=1)
peplist$match[i]<-sum(match)
}
View(peplist)
filter<-peplist[peplist$match>0,]
peptide_quant<-('/Users/lb4489/project/merge_peptide/tmt-report/abundance_peptide_MD.tsv')
# peptide_quant<-('/Users/lb4489/project/merge_peptide/tmt-report/abundance_peptide_MD.tsv')
quant<-read.table(peptide_quant,sep = '\t',header = T)
View(quant)
nonadd<-read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
View(nonadd)
list<-nonadd$Peptide.Sequence[-grep('HUMAN',nonadd$Mapped.Proteins),]
nonadd<-read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
list1<-nonadd$Peptide.Sequence[-grep('HUMAN',nonadd$Mapped.Proteins),]
list1<-nonadd$Peptide.Sequence[-grep('HUMAN',nonadd$Mapped.Proteins)]
library('Biostrings')
peplist<-nonadd$Peptide.Sequence
peplist<-unique(peplist)
peplist<-data.frame(seq=c(peplist),
match=c(NA))
# fastafile<-('/Users/lb4489/project/biodata/uniprot_human.fasta')
pattern2 <- readAAStringSet(fastafile)
for (i in 1:nrow(peplist)){
pattern1 <- AAString(peplist$seq[i])
match<-vcountPattern(pattern1, pattern2, max.mismatch=1)
peplist$match[i]<-sum(match)
}
list2<-peplist[peplist$match>0,]
filter<-unique(c(list1,list2))
View(filter)
list2<-peplist$seq[peplist$match>0]
filter<-unique(c(list1,list2))
filter
quant<-quant[!(quant$Peptide %in% filter),]
View(quant)
??filter_psm
library(TNSMD)
?filter_psm
install.packages("roxygen2")
?read.table
library(TNSMD)
?filter_psm
??filter_psm
library(TNSMD)
?filter_psm
?filter_psm
library(TNSMD)
?hello
library(TNSMD)
?filter_psm
datatype<-'tmt'
datatype=='tmt'
combined_peptide<-c('../test_package/LBF/combined_peptide.tsv')
nonadd<-utils::read.table(combined_peptide,sep = '\t',header = T)
View(nonadd)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
View(nonadd)
list1<-nonadd$Peptide.Sequence[-grep('HUMAN',nonadd$Mapped.Proteins)]
peplist<-nonadd$Peptide.Sequence
peplist<-unique(peplist)
peplist<-data.frame(seq=c(peplist),
match=c(NA))
pattern2 <- Biostrings::readAAStringSet(fastafile)
for (i in 1:nrow(peplist)){
pattern1 <- Biostrings::AAString(peplist$seq[i])
match<-Biostrings::vcountPattern(pattern1, pattern2, max.mismatch=1)
peplist$match[i]<-sum(match)
}
list2<-peplist$seq[peplist$match>0]
View(peplist)
peptide_quant<-c('../test_package/LBF/MSstats.csv')
quant<-utils::read.table(peptide_quant,sep = '\t',header = T)
View(quant)
quant<-utils::read.table(peptide_quant,sep = ',',header = T)
View(quant)
filter<-unique(c(list1,list2))
(gsub("[^A-Za-z]", "", quant$PeptideSequence)【1:5
(gsub("[^A-Za-z]", "", quant$PeptideSequence)[1:5]
)
gsub("[^A-Za-z]", "", quant$PeptideSequence)[1:20]
quant<-quant[!(gsub("[^A-Za-z]", "", quant$PeptideSequence) %in% filter),]
View(quant)
quant<-quant[!(gsub("[^A-Z]", "", quant$PeptideSequence) %in% filter),]
View(quant)
filter
library(TNSMD)
peptide_quant
View(nonadd)
nonadd<-utils::read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
View(nonadd)
list1<-nonadd$Peptide.Sequence[-grep('HUMAN',nonadd$Mapped.Proteins)]
peplist<-nonadd$Peptide.Sequence
peplist<-unique(peplist)
peplist<-data.frame(seq=c(peplist),
match=c(NA))
pattern2 <- Biostrings::readAAStringSet(fastafile)
for (i in 1:nrow(peplist)){
pattern1 <- Biostrings::AAString(peplist$seq[i])
match<-Biostrings::vcountPattern(pattern1, pattern2, max.mismatch=1)
peplist$match[i]<-sum(match)
}
list2<-peplist$seq[peplist$match>0]
quant<-utils::read.table(peptide_quant,sep = ',',header = T)
filter<-unique(c(list1,list2))
View(quant)
quant<-quant[!duplicated(gsub("[^A-Z]", "", quant$PeptideSequence)),]
View(quant)
quant<-quant[grep('sPep',quant$ProteinName)]
quant<-quant[grep('sPep',quant$ProteinName),]
View(quant)
nonadd<-utils::read.table(combined_peptide,sep = '\t',header = T)
nonadd<-nonadd[-grep('HUMAN',nonadd$Protein),]
nonadd<-nonadd[-grep('sp',nonadd$Protein),]
View(peplist)
nonadd<-utils::read.table(combined_peptide,sep = '\t',header = T)
View(nonadd)
length(unique(nonadd$Peptide.Sequence))
quant<-utils::read.table(peptide_quant,sep = ',',header = T)
length(unique(gsub("[^A-Z]", "", quant$PeptideSequence)))
quant<-quant[quant$Intensity>0,]
length(unique(gsub("[^A-Z]", "", quant$PeptideSequence)))
quant<-quant[quant$Intensity>0 & !is.na(quant$Intensity),]
View(quant)
length(unique(gsub("[^A-Z]", "", quant$PeptideSequence)))
unique(gsub("[^A-Z]", "", quant$PeptideSequence))[1:5]
