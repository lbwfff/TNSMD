% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_index.R
\name{generate_index}
\alias{generate_index}
\title{Construction of a proteogenomics index based on ribo-seq results}
\usage{
generate_index(file, source, length, label, OrganismName, OrganismIdentifier)
}
\arguments{
\item{file}{Ribo-seq analysis output file, When source is set to other, you need to provide three columns including 'genename', 'orftype' and 'pepseq'. csv file}

\item{source}{ribocode, ribotish or other, Can be set to other to index result files or public database files that are not ribocode or ribotish outputs}

\item{length}{Peptide length, used to filter long proteins in the index, set to 0 when there is no need to filter by length}

\item{label}{index tag, e.g. 'sPep', note that subsequent analyses will be fetched based on this label, so please do not enter labels that may cause confusion}

\item{OrganismName}{OrganismName is the scientific name of the organism for the UniProtKB entry, defaulting to "Homo sapiens".}

\item{OrganismIdentifier}{OrganismIdentifier is the unique identifier of the source organism, assigned by NCBI, defaulting to "9696".}
}
\value{
A Biostrings object can be written as a fasta file
}
\description{
Construction of a proteogenomics index based on ribo-seq results
}
\examples{

#don't run

library('TNSMD')

#ribocode
ribocode<-generate_index('/scratch/lb4489/project/liver_ribo/Ribo/ribocode_liver_ribo.txt','ribocode',100,'sPep')

#ribitish
ribotish<-generate_index('/scratch/lb4489/project/liver_ribo/Ribo/ribotish_full_all.txt','ribotish',100,'sPep')

#database
other<-read.table('/scratch/lb4489/project/toolbox/SmProt2_human_Ribo.txt',sep = '\t',header = T)
other<-data.frame(genename=c('SPROHSA'),
                 orftype=c('Orf'),
                 pepseq=c(other$AAseq))
write.csv(other,'/scratch/lb4489/project/toolbox/smprot2.csv')

other<-generate_index('/scratch/lb4489/project/toolbox/smprot2.csv','other',100,'sPep')

#write

characters<-other$sequence #peptide sequence
list<-as.list(characters)
seqinr::write.fasta(sequences=list, names=other$name,
                   file.out='test.fasta', open='w', nbchar=60)


}
